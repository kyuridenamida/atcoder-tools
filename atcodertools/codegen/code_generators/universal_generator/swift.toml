base_indent = 1
insert_space_around_operators = false

# global変数宣言時の接頭辞
global_prefix = ""
solve_function = "_ = solve({actual_arguments})"

# ループ
[loop]
header = "for {loop_var} in 0..<{length} {{"
footer = "}}"

# タイプ
[type]
int = "Int"
float = "Double"
str = "String"

# デフォルト値
[default]
int = "0"
float = "0.0"
str = '""'

# 宣言
[declare]
int = "let {name}:Int"
float = "let {name}:Double"
str = "let {name}:String"
seq = "var {name}:[{type}]"
2d_seq = "var {name}:[[{type}]]"

# 確保
[allocate]
seq = "{name} = [{type}](repeating: {default}, count: {length})"
2d_seq = "{name} = [[{type}]](repeating: [{type}](repeating: {default}, count: {length_j}), count: {length_i})"
# 宣言と確保
[declare_and_allocate]
seq = "var {name} = [{type}](repeating: {default}, count: {length})"
2d_seq = "var {name} = [[{type}]](repeating: [{type}](repeating: {default}, count: {length_j}), count: {length_i})"
# 入力関数
[input_func]
int = "readInt()"
float = "readDouble()"
str = "readString()"

# 入力
[input]
int = "{name} = {input_func}"
float = "{name} = {input_func}"
str = "{name} = {input_func}"

# 宣言と入力
[declare_and_input]
int = "let {name} = {input_func}"
float = "let {name} = {input_func}"
str = "let {name} = {input_func}"

# 引数
[arg]
int = "_ {name}:Int"
float = "_ {name}:Double"
str = "_ {name}:String"
seq = "_ {name}:[{type}]"
2d_seq = "_ {name}:[[{type}]]"

# 配列アクセス
[access]
seq = "{name}[{index}]"
2d_seq = "{name}[{index_i}][{index_j}]"
